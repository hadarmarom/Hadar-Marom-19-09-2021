{"version":3,"sources":["services/async-storage.service.js","services/weatherService.js","store/actions/weatherActions.js","cmps/DarkModeSwitch.jsx","cmps/AppHeader/AppHeader.jsx","pages/FavoritesList/FavoritesList.jsx","cmps/DaysList/DaysList.jsx","cmps/DegreesSwitch.jsx","pages/MainDetails/MainDetails.jsx","App.js","store/reducers/weatherReducer.js","store/index.js","reportWebVitals.js","index.js"],"names":["storageService","query","get","entityType","entityId","then","entities","find","entity","_id","post","newEntity","_makeId","push","_save","postMany","newEntities","map","put","updatedEntity","idx","findIndex","splice","remove","JSON","parse","localStorage","getItem","Promise","resolve","setItem","stringify","length","text","possible","i","charAt","Math","floor","random","KEY","queryLocation","queryWeather","query5Days","getCityByGeoloc","loadFavorites","addToFavorites","removeFromFavorites","autocomplete","a","loc","citys","Key","axios","res","data","catch","err","console","log","cityKey","weather","Object","keys","includes","cname","LocalizedName","forecastArr","forecasts","DailyForecasts","day","dayTimestamp","EpochDate","temperature","Temperature","lat","lon","AdministrativeArea","city","favorites","currCity","location","loadLocation","filterBy","dispatch","weatherService","type","SwitchRoot","styled","SwitchInput","SwitchThumb","theme","palette","mode","encodeURIComponent","SwitchTrack","MUISwitch","props","useSwitch","getInputProps","checked","disabled","focusVisible","useDispatch","stateClasses","useEffect","bool","className","clsx","aria-label","UseSwitchesCustom","defaultChecked","AppHeader","isDarkMode","useSelector","state","weatherReducer","style","color","to","FavoritesList","onClick","WeatherText","Maximum","Value","DaysList","isFahrenheit","calcToCelsius","useState","dayInWeek","setDayInWeek","Date","getDay","transform","maxWidth","AntSwitch","Switch","width","height","padding","display","opacity","backgroundColor","boxShadow","borderRadius","transition","transitions","create","duration","boxSizing","CustomizedSwitches","setIsFahrenheit","Stack","direction","spacing","alignItems","Typography","onChange","inputProps","MainDetails","searchTerm","setSearchTerm","disableSearch","setDisableSearch","autoCompleteOpt","setAutoCompleteOpt","pressedCity","setPressedCity","isErrModal","setIsErrModal","setCity","liked","setLiked","checkIfLiked","auto","setTimeout","some","fav","tuggleFavorite","success","pos","crd","coords","latitude","longitude","myCity","error","warn","code","message","toFixed","Button","variant","navigator","geolocation","getCurrentPosition","border","Autocomplete","clear-on-blur","value","e","newValue","inputValue","onInputChange","newInputValue","test","id","options","sx","renderInput","params","TextField","label","marginLeft","icon","faHeart","App","backgroundImage","component","path","INITIAL_STATE","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de141097.chunk.js","sourcesContent":["export const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    postMany,\r\n    put,\r\n    remove,\r\n    _save\r\n}\r\n\r\nfunction query(entityType) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n    return Promise.resolve(entities)\r\n}\r\n\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity)\r\n            _save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            newEntities = newEntities.map(entity => ({...entity, _id: _makeId() }))\r\n            entities.push(...newEntities)\r\n            _save(entityType, entities)\r\n            return entities\r\n        })\r\n}\r\n\r\n\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            _save(entityType, entities)\r\n        })\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}","import axios from \"axios\";\r\nimport { storageService } from \"./async-storage.service\"\r\n\r\nconst KEY = 'giM62u15qVXsZT8HSQ1nVR6iU34WbtSp'\r\n\r\nexport default {\r\n    queryLocation,\r\n    queryWeather,\r\n    query5Days,\r\n    getCityByGeoloc,\r\n    loadFavorites,\r\n    addToFavorites,\r\n    removeFromFavorites,\r\n    autocomplete\r\n}\r\n\r\nasync function queryLocation(loc = 'tel aviv') {\r\n    try {\r\n        const citys = await storageService.query(`locationResults_${loc}`);\r\n        if (citys?.Key) {\r\n            return Promise.resolve(citys);\r\n        }\r\n        return axios.get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=%09${KEY}&q=${loc}`)\r\n            .then(res => {\r\n                if (res.data.length) {\r\n                    storageService._save(`locationResults_${loc}`, res.data[0]);\r\n                    return res.data[0];\r\n                }\r\n                else {\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('Service got Error:', err);\r\n            })\r\n    } catch (err) {\r\n        console.log('err in queryLocation functin:', err)\r\n    }\r\n}\r\nasync function queryWeather(cityKey = '215854') {\r\n    try {\r\n        const weather = await storageService.query(`weatherResults_${cityKey}`);\r\n        if (Object.keys(weather).includes('WeatherText')) {\r\n            return Promise.resolve(weather);\r\n        }\r\n        return axios.get(`https://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${KEY}&details=true`)\r\n            .then(res => {\r\n                if (res.data.length) {\r\n                    storageService._save(`weatherResults_${cityKey}`, res.data[0]);\r\n                    return res.data[0]\r\n                }\r\n                else {\r\n                    storageService._save(`weatherResults_${cityKey}`, res.data);\r\n                    return res.data;\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('Service got Error:', err);\r\n            })\r\n    } catch (err) {\r\n        console.log('err in queryWeather functin:', err)\r\n    }\r\n}\r\nasync function autocomplete(res) {\r\n    try {\r\n        if (res === '') return\r\n        const weather = await storageService.query(`autoResults_${res}`);\r\n        if (weather?.Key) {\r\n            console.log('autocomplete from storage!');\r\n            return Promise.resolve(weather);\r\n        }\r\n        return axios.get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${KEY}&q=${res}`)\r\n            .then(res => {\r\n                if (res.data.length) {\r\n                    return res.data.map((cname) => cname.LocalizedName)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('Service got Error:', err);\r\n            })\r\n    } catch (err) {\r\n        console.log('err in queryWeather functin:', err)\r\n    }\r\n}\r\nasync function query5Days(cityKey = '215854') {\r\n    try {\r\n        var forecastArr = []\r\n        const forecasts = await storageService.query(`5DaysResults_${cityKey}`);\r\n        if (Object.keys(forecasts).includes('DailyForecasts')) {\r\n            forecastArr = forecasts.DailyForecasts.map((day) => {\r\n                return {\r\n                    dayTimestamp: day.EpochDate,\r\n                    temperature: day.Temperature\r\n                }\r\n            })\r\n            return Promise.resolve(forecastArr);\r\n        }\r\n        return axios.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=${KEY}&details=true`)\r\n            .then(res => {\r\n                storageService._save(`5DaysResults_${cityKey}`, res.data);\r\n                return res.data.DailyForecasts.map((day) => {\r\n                    return {\r\n                        dayTimestamp: day.EpochDate,\r\n                        temperature: day.Temperature\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log('Service got Error:', err);\r\n            })\r\n    } catch (err) {\r\n        console.log('err in query5Days functin:', err)\r\n    }\r\n}\r\nasync function getCityByGeoloc(lat, lon) {\r\n    try {\r\n        return axios.get(`https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${KEY}&q=${lat}%2C${lon}&toplevel=false`)\r\n            .then(res => {\r\n                return res.data.AdministrativeArea.LocalizedName\r\n            })\r\n            .catch(err => {\r\n                console.log('Service got Error:', err);\r\n            })\r\n    } catch (err) {\r\n        console.log('err in query5Days functin:', err)\r\n    }\r\n}\r\nasync function loadFavorites() {\r\n    try {\r\n        return await storageService.query(`Favorites`);\r\n    } catch (err) {\r\n        console.log('err in addToFavorites functin:', err)\r\n    }\r\n}\r\nasync function addToFavorites(city) {\r\n    try {\r\n        const favorites = await storageService.query(`Favorites`);\r\n        favorites.push(city)\r\n        storageService._save(`Favorites`, favorites);\r\n        return favorites\r\n    } catch (err) {\r\n        console.log('err in addToFavorites functin:', err)\r\n    }\r\n}\r\nasync function removeFromFavorites(city) {\r\n    try {\r\n        const favorites = await storageService.query(`Favorites`);\r\n        const idx = favorites.findIndex(currCity => currCity.location.Key === city.location.Key)\r\n        favorites.splice(idx, 1)\r\n        storageService._save(`Favorites`, favorites);\r\n        return favorites\r\n    } catch (err) {\r\n        console.log('err in removeFromFavorites functin:', err)\r\n    }\r\n}","import weatherService from '../../services/weatherService'\r\n\r\nexport function loadLocation(filterBy = 'tel aviv') {\r\n  return async dispatch => {\r\n    const favorites = await weatherService.loadFavorites()\r\n    const location = await weatherService.queryLocation(filterBy)\r\n    if (!location) return filterBy\r\n    const weather = await weatherService.queryWeather(location.Key)\r\n    const forecasts = await weatherService.query5Days(location.Key)\r\n    var action = { type: 'SET_FAVORITES', favorites }\r\n    dispatch(action)\r\n    var action = { type: 'SET_LOCATION', location }\r\n    dispatch(action)\r\n    action = { type: 'SET_WEATHER', weather }\r\n    dispatch(action)\r\n    action = { type: 'SET_FORECASTS', forecasts }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function addToFavorites(city) {\r\n  return async dispatch => {\r\n    const favorites = await weatherService.addToFavorites(city)\r\n    var action = { type: 'SET_FAVORITES', favorites }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function removeFromFavorites(city) {\r\n  return async dispatch => {\r\n    const favorites = await weatherService.removeFromFavorites(city)\r\n    var action = { type: 'SET_FAVORITES', favorites }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function changeDarkMode(bool) {\r\n  return async dispatch => {\r\n    var action = { type: 'SET_DARK_MODE', bool }\r\n    dispatch(action)\r\n  }\r\n}","import * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport { styled } from '@mui/system';\r\nimport { useSwitch } from '@mui/core/SwitchUnstyled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeDarkMode } from '../store/actions/weatherActions';\r\nimport { useEffect } from 'react'\r\n\r\n\r\nconst SwitchRoot = styled('span')(`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 62px;\r\n  height: 34px;\r\n  padding-top:7px\r\n\r\n`);\r\n\r\nconst SwitchInput = styled('input')(`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  z-index: 1;\r\n  margin: 0;\r\n  cursor: pointer;\r\n`);\r\n\r\nconst SwitchThumb = styled('span')(\r\n  ({ theme }) => `\r\n  position: absolute;\r\n  display: block;\r\n  background-color: ${theme.palette.mode === 'dark' ? '#003892' : '#001e3c'};\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  top: 1px;\r\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:before {\r\n    display: block;\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    background: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n    '#fff',\r\n  )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>') center center no-repeat;\r\n  }\r\n\r\n  &.focusVisible {\r\n    background-color: #79B;\r\n  }\r\n\r\n  &.checked {\r\n    transform: translateX(31px);\r\n    \r\n    &:before {\r\n      background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n    '#fff',\r\n  )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>');\r\n    }\r\n  }\r\n`,\r\n);\r\n\r\nconst SwitchTrack = styled('span')(\r\n  ({ theme }) => `\r\n  background-color: ${theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be'};\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 50%;\r\n  display: block;\r\n`,\r\n);\r\n\r\nfunction MUISwitch(props) {\r\n  const { getInputProps, checked, disabled, focusVisible } = useSwitch(props);\r\n  const dispatch = useDispatch()\r\n  const stateClasses = {\r\n    checked,\r\n    disabled,\r\n    focusVisible,\r\n  };\r\n  useEffect(() => {\r\n    dispatch(changeDarkMode(checked))\r\n  }, [checked])\r\n\r\n  return (\r\n    <SwitchRoot className={clsx(stateClasses)}>\r\n      <SwitchTrack>\r\n        <SwitchThumb className={clsx(stateClasses)} />\r\n      </SwitchTrack>\r\n      <SwitchInput {...getInputProps()} aria-label=\"Demo switch\" />\r\n    </SwitchRoot>\r\n  );\r\n}\r\nexport default function UseSwitchesCustom() {\r\n  return <MUISwitch defaultChecked />;\r\n}","import { Link } from 'react-router-dom'\nimport './AppHeader.scss'\nimport UseSwitchesCustom from '../DarkModeSwitch'\nimport { useSelector } from 'react-redux'\n\n\nexport function AppHeader() {\n    const isDarkMode = useSelector(state => state.weatherReducer.isDarkMode)\n    return (\n        <div className=\"app-header\" style={isDarkMode ? { color: 'white' } : { color: 'black' }}>\n            <div>\n                <UseSwitchesCustom defaultChecked />\n            </div>\n            <span className=\"herolo-span\">Herolo Weather Task</span>\n            <nav className=\"app-header-con\">\n                <Link to={`/`}>HOME </Link>\n                 <span>|</span>\n                <Link to={`/favorites`}> FAVORITES</Link>\n            </nav>\n        </div>\n    )\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { loadLocation } from '../../store/actions/weatherActions'\nimport './FavoritesList.scss'\n\nexport function FavoritesList() {\n    const dispatch = useDispatch()\n    const favorites = useSelector(state => state.weatherReducer.favorites)\n    const isDarkMode = useSelector(state => state.weatherReducer.isDarkMode)\n\n    return (\n        <ul className=\"favorites-list\" style={isDarkMode ? { color: 'white' } : { color: 'black' }}>\n            {favorites.map((city) => <li key={city.location.Key} className={isDarkMode ? \"dark\" : \"bright\"}><Link onClick={() => dispatch(loadLocation(city.location.LocalizedName))} to={`/`}>\n                <h3>{city.location.LocalizedName}</h3>\n                <h3>{city.weather.WeatherText}</h3>\n                <h3>{city.forecasts[0].temperature.Maximum.Value} °F</h3>\n            </Link>\n            </li>\n            )}\n            {!favorites.length && <span>You Have No Favorite Cities Yet</span>}\n        </ul>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport './DaysList.scss'\n\nexport function DaysList({ day, isFahrenheit, calcToCelsius, isDarkMode }) {\n\n    const [dayInWeek, setDayInWeek] = useState('')\n\n    useEffect(() => {\n        var a = new Date(day.dayTimestamp * 1000)\n        var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        setDayInWeek(days[a.getDay()])\n    }, [])\n\n    return (\n        <li className={isDarkMode ? \"day-container dark\" : \"day-container\"}>\n            <h4 >{dayInWeek}</h4>\n            <div>\n                <h4 style={{ transform: isFahrenheit ? \"translateX(0)\" : \"translateX(-130px)\", maxWidth: isFahrenheit ? \"100%\" : \"0\" }} >{day.temperature.Maximum.Value + \" °F\"}</h4>\n                <h4 style={{ transform: isFahrenheit ? \"translateX(130px)\" : \"translateX(0)\", maxWidth: isFahrenheit ? \"0\" : \"100%\" }} >{calcToCelsius(day) + \" °C\"}</h4>\n            </div>\n        </li >\n    )\n}\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Switch from '@mui/material/Switch';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nconst AntSwitch = styled(Switch)(({ theme }) => ({\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: 'flex',\r\n    '&:active': {\r\n        '& .MuiSwitch-thumb': {\r\n            width: 15,\r\n        },\r\n        '& .MuiSwitch-switchBase.Mui-checked': {\r\n            transform: 'translateX(9px)',\r\n        },\r\n    },\r\n    '& .MuiSwitch-switchBase': {\r\n        padding: 2,\r\n        '&.Mui-checked': {\r\n            transform: 'translateX(12px)',\r\n            color: '#fff',\r\n            '& + .MuiSwitch-track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#1890ff',\r\n            },\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\r\n        width: 12,\r\n        height: 12,\r\n        borderRadius: 6,\r\n        transition: theme.transitions.create(['width'], {\r\n            duration: 200,\r\n        }),\r\n    },\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor:\r\n            theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',\r\n        boxSizing: 'border-box',\r\n    },\r\n}));\r\n\r\nexport default function CustomizedSwitches({ setIsFahrenheit, isFahrenheit }) {\r\n    const handleChange = () => {\r\n        setIsFahrenheit(!isFahrenheit)\r\n    }\r\n    return (\r\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n            <Typography>Celsius</Typography>\r\n            <AntSwitch defaultChecked onChange={() => handleChange()} inputProps={{ 'aria-label': 'ant design' }} />\r\n            <Typography>Fahrenheit</Typography>\r\n        </Stack>\r\n    );\r\n}","import './MainDetails.scss'\nimport weatherService from '../../services/weatherService'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeFromFavorites, addToFavorites, autocomplete, loadLocation } from '../../store/actions/weatherActions'\nimport { DaysList } from '../../cmps/DaysList/DaysList'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport CustomizedSwitches from '../../cmps/DegreesSwitch'\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Button from '@mui/material/Button';\n\nexport function MainDetails() {\n    const dispatch = useDispatch()\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const currCity = useSelector(state => state.weatherReducer.currCity)\n    const favorites = useSelector(state => state.weatherReducer.favorites)\n    const isDarkMode = useSelector(state => state.weatherReducer.isDarkMode)\n\n    const [disableSearch, setDisableSearch] = useState(false);\n    const [autoCompleteOpt, setAutoCompleteOpt] = useState([]);\n    const [pressedCity, setPressedCity] = useState('');\n    const [isFahrenheit, setIsFahrenheit] = useState(true)\n    const [isErrModal, setIsErrModal] = useState(false);\n    const [city, setCity] = useState(currCity);\n    const [liked, setLiked] = useState(false);\n\n    useEffect(() => {\n        setCity(currCity);\n        checkIfLiked()\n    }, [currCity])\n\n    useEffect(() => {\n        checkIfLiked()\n    }, [])\n\n    useEffect(async () => {\n        if (searchTerm) {\n            if (pressedCity === searchTerm) return\n            const auto = await weatherService.autocomplete(searchTerm)\n            if (!auto) {\n                setIsErrModal(true)\n                setTimeout(() => {\n                    setIsErrModal(false)\n                }, 3000);\n            }\n            else setAutoCompleteOpt(auto)\n        }\n    }, [searchTerm]);\n\n    useEffect(async () => {\n        const err = await dispatch(loadLocation(searchTerm))\n        if (err) {\n            setIsErrModal(true)\n            setTimeout(() => {\n                setIsErrModal(false)\n            }, 3000);\n        }\n        setAutoCompleteOpt([])\n    }, [pressedCity]);\n\n    const checkIfLiked = () => {\n        (favorites.some((fav) => fav.location.Key === city.location.Key)) ? setLiked(true) : setLiked(false)\n    }\n\n    const tuggleFavorite = () => {\n        if (favorites.some((fav) => fav.location.Key === city.location.Key)) {\n            setLiked(false)\n            return dispatch(removeFromFavorites(currCity))\n        }\n        setLiked(true)\n        dispatch(addToFavorites(currCity))\n    }\n\n    const typeLetters = (value) => {\n        let isEnglish = /^[A-Za-z\\s]+$/.test(value);\n        if (isEnglish || value === '') {\n            setDisableSearch(false)\n            setSearchTerm(value)\n        } else {\n            setDisableSearch(true)\n        }\n    }\n\n    const getGeoLoc = () => {\n        navigator.geolocation.getCurrentPosition(success, error);\n    }\n\n    const success = async (pos) => {\n        var crd = pos.coords;\n        const myCity = await weatherService.getCityByGeoloc(crd.latitude, crd.longitude)\n        dispatch(loadLocation(searchTerm))\n        setPressedCity(myCity)\n    }\n    const error = (err) => {\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n    }\n\n    const fillHeart = (bool) => {\n        return bool ? { color: 'red' } : { color: 'gray' }\n    }\n    const calcToCelsius = (day) => {\n        const res = ((day.temperature.Maximum.Value - 32) * 0.5556).toFixed(1)\n        return res * 1; // removes trailing zeros\n    }\n\n    return (\n        <>\n            <section className={isDarkMode ? 'dark functions-sec ' : 'functions-sec '} style={isDarkMode ? { color: 'white' } : { color: 'blue' }}>\n                <Button variant=\"outlined\" style={{ color: 'white !important' }} onClick={() => getGeoLoc()} style={isDarkMode ? { color: 'white', border: '1px solid white' } : { color: 'blue' }}>Get My Location!</Button>\n                <div className=\"input-container\">\n                    <Autocomplete clear-on-blur=\"true\" style={{ color: 'white !important' }} value={pressedCity} onChange={(e, newValue) => {\n                        setAutoCompleteOpt([])\n                        return setPressedCity(newValue)\n                    }} inputValue={searchTerm} onInputChange={(e, newInputValue) => typeLetters(newInputValue)} id=\"clear-on-blur\" options={autoCompleteOpt} sx={{ width: 300 }} renderInput={(params) => <TextField variant=\"standard\" {...params} label=\"Enter City Name Here...\" />} />\n                </div>\n                {disableSearch && <small>english letters only!</small>}\n                <CustomizedSwitches style={{ backgroundColor: 'red !important', transition: ' 0.3 !impirtant' }} setIsFahrenheit={setIsFahrenheit} isFahrenheit={isFahrenheit} defaultChecked />\n            </section>\n            <div className={isDarkMode ? ' curr-city-view dark ' : ' curr-city-view light'}>\n                <section className={isDarkMode ? 'dark curr-city-top-sec ' : 'light curr-city-top-sec '}>\n                    <section>\n                        <h2>{city.location.LocalizedName}</h2>\n                        <div>\n                            <h4 style={{ transform: isFahrenheit ? \"translateX(0)\" : \"translateX(-100px)\", maxWidth: isFahrenheit ? \"100%\" : \"0\" }} >{city.forecasts[0].temperature.Maximum.Value + \" °F\"}</h4>\n                            <h4 style={{ transform: isFahrenheit ? \"translateX(100px)\" : \"translateX(0)\", marginLeft: '40px', maxWidth: isFahrenheit ? \"0\" : \"100%\" }} >{calcToCelsius(city.forecasts[0]) + \" °C\"}</h4>\n                        </div>\n                    </section>\n                    <div className=\"like-sec\" onClick={() => tuggleFavorite()}><Button variant=\"text\">{liked ? \"remove from favorites\" : \"add to favorites\"}</Button><FontAwesomeIcon icon={faHeart} className=\"heart\" style={fillHeart(liked)} /></div>\n                </section>\n                <h2>{city.weather.WeatherText}</h2>\n                <ul className=\"days-list\">{city.forecasts.map((day, idx) => <DaysList key={idx} isDarkMode={isDarkMode} calcToCelsius={calcToCelsius} isFahrenheit={isFahrenheit} day={day} ></DaysList>)}</ul>\n                {isErrModal && <div className=\"snackbar\">Sorry, We Could'nt Find {searchTerm}</div>}\n            </div>\n        </>\n    )\n\n}","\nimport './App.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { loadLocation } from './store/actions/weatherActions';\nimport { AppHeader } from './cmps/AppHeader/AppHeader';\nimport { FavoritesList } from './pages/FavoritesList/FavoritesList';\nimport { MainDetails } from './pages/MainDetails';\n\nfunction App() {\n  const dispatch = useDispatch()\n  const currCity = useSelector(state => state.weatherReducer.currCity)\n  const isDarkMode = useSelector(state => state.weatherReducer.isDarkMode)\n\n  useEffect(() => {\n    dispatch(loadLocation())\n  }, [])\n\n  if (!currCity.location.Key || !currCity.weather.WeatherText || !currCity.forecasts.length) return <div>loadiv</div>\n\n  return (\n    <Router>\n      <div className=\"App container\" style={isDarkMode ? { backgroundImage: ' linear-gradient(rgb(101, 183, 198), rgb(3 45 60) 80%)' } : { backgroundImage: ' linear-gradient(rgb(246, 254, 255), rgb(0 189 255) 80%)' }}>\n        <AppHeader></AppHeader>\n        <Switch>\n          <Route component={FavoritesList} path='/favorites' />\n          <Route component={MainDetails} path='/' />\n        </Switch>\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n\n","\r\nconst INITIAL_STATE = {\r\n  favorites: [],\r\n  isDarkMode: true,\r\n  currCity: {\r\n    location: '',\r\n    weather: '',\r\n    forecasts: []\r\n  },\r\n}\r\n\r\nexport function weatherReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_LOCATION':\r\n      return {\r\n        ...state,\r\n        currCity: {\r\n          ...state.currCity,\r\n          location: action.location\r\n        },\r\n      }\r\n    case 'SET_WEATHER':\r\n      return {\r\n        ...state,\r\n        currCity: {\r\n          ...state.currCity,\r\n          weather: action.weather\r\n        },\r\n      }\r\n    case 'SET_FORECASTS':\r\n      return {\r\n        ...state,\r\n        currCity: {\r\n          ...state.currCity,\r\n          forecasts: action.forecasts\r\n        },\r\n      }\r\n    case 'SET_FAVORITES':\r\n      return {\r\n        ...state,\r\n        favorites: [...action.favorites]\r\n      }\r\n    case 'SET_DARK_MODE':\r\n      return {\r\n        ...state,\r\n        isDarkMode: action.bool\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { weatherReducer } from './reducers/weatherReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst rootReducer = combineReducers({\r\n  weatherReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}