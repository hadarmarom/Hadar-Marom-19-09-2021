{"version":3,"sources":["services/async-storage.service.js","services/weatherService.js","store/actions/weatherActions.js","cmps/DaysList/DaysList.jsx","cmps/DegreesSwitch.jsx","cmps/MainDetails/MainDetails.jsx","pages/HeroloApp/HeroloApp.jsx","cmps/DarkModeSwitch.jsx","cmps/AppHeader/AppHeader.jsx","pages/FavoritesList/FavoritesList.jsx","App.js","store/reducers/weatherReducer.js","store/index.js","reportWebVitals.js","index.js"],"names":["storageService","query","get","entityType","entityId","then","entities","find","entity","_id","post","newEntity","_makeId","push","_save","postMany","newEntities","map","put","updatedEntity","idx","findIndex","splice","remove","JSON","parse","localStorage","getItem","Promise","resolve","setItem","stringify","length","text","possible","i","charAt","Math","floor","random","KEY","queryLocation","queryWeather","query5Days","getCityByGeoloc","loadFavorites","addToFavorites","removeFromFavorites","a","loc","citys","Key","axios","res","data","catch","err","console","log","cityKey","weather","Object","keys","includes","forecastArr","forecasts","DailyForecasts","day","dayTimestamp","EpochDate","temperature","Temperature","lat","lon","AdministrativeArea","LocalizedName","city","favorites","currCity","location","loadLocation","filterBy","dispatch","weatherService","type","DaysList","isFahrenheit","calcToCelsius","isDarkMode","useState","dayInWeek","setDayInWeek","useEffect","Date","getDay","className","style","transform","maxWidth","Maximum","Value","AntSwitch","styled","Switch","theme","width","height","padding","display","color","opacity","backgroundColor","palette","mode","boxShadow","borderRadius","transition","transitions","create","duration","boxSizing","CustomizedSwitches","setIsFahrenheit","Stack","direction","spacing","alignItems","Typography","defaultChecked","onChange","inputProps","MainDetails","useDispatch","searchTerm","setSearchTerm","debouncedInput","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","useSelector","state","weatherReducer","disableSearch","setDisableSearch","isErrModal","setIsErrModal","setCity","liked","setLiked","checkIfLiked","bool","some","fav","tuggleFavorite","success","pos","crd","coords","latitude","longitude","myCity","error","warn","code","message","toFixed","Button","variant","onClick","navigator","geolocation","getCurrentPosition","border","Box","component","sx","m","noValidate","autoComplete","TextField","marginBottom","id","label","e","test","target","marginLeft","icon","faHeart","WeatherText","HeroloApp","SwitchRoot","SwitchInput","SwitchThumb","encodeURIComponent","SwitchTrack","MUISwitch","props","useSwitch","getInputProps","checked","disabled","focusVisible","stateClasses","clsx","aria-label","UseSwitchesCustom","AppHeader","to","FavoritesList","App","backgroundImage","path","INITIAL_STATE","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec0f2661.chunk.js","sourcesContent":["export const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    postMany,\r\n    put,\r\n    remove,\r\n    _save\r\n}\r\n\r\nfunction query(entityType) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n    return Promise.resolve(entities)\r\n}\r\n\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity)\r\n            _save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            newEntities = newEntities.map(entity => ({...entity, _id: _makeId() }))\r\n            entities.push(...newEntities)\r\n            _save(entityType, entities)\r\n            return entities\r\n        })\r\n}\r\n\r\n\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            _save(entityType, entities)\r\n        })\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}","import axios from \"axios\";\r\nimport { storageService } from \"./async-storage.service\"\r\n\r\nconst KEY = 'cLYEp1SU2rgt9T5GDBlj829nm57LbnAg'\r\n\r\nexport default {\r\n    queryLocation,\r\n    queryWeather,\r\n    query5Days,\r\n    getCityByGeoloc,\r\n    loadFavorites,\r\n    addToFavorites,\r\n    removeFromFavorites\r\n}\r\n\r\nasync function queryLocation(loc = 'tel aviv') {\r\n    try {\r\n        const citys = await storageService.query(`locationResults_${loc}`);\r\n        if (citys?.Key) {\r\n            // console.log('queryLocation from storage!');\r\n            return Promise.resolve(citys);\r\n        }\r\n        // console.log('api queryLocation...');\r\n        return axios.get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=%09${KEY}&q=${loc}`)\r\n            .then(res => {\r\n                if (res.data.length) {\r\n                    storageService._save(`locationResults_${loc}`, res.data[0]);\r\n                    return res.data[0];\r\n                }\r\n                else {\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('Service got Error:', err);\r\n            })\r\n    } catch (err) {\r\n        console.log('err in queryLocation functin:', err)\r\n    }\r\n}\r\nasync function queryWeather(cityKey = '215854') {\r\n    try {\r\n        const weather = await storageService.query(`weatherResults_${cityKey}`);\r\n        if (Object.keys(weather).includes('WeatherText')) {\r\n            // console.log('queryWeather from storage!');\r\n            return Promise.resolve(weather);\r\n        }\r\n        // console.log('api queryWeather...');\r\n        return axios.get(`https://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${KEY}&details=true`)\r\n            .then(res => {\r\n                if (res.data.length) {\r\n                    storageService._save(`weatherResults_${cityKey}`, res.data[0]);\r\n                    return res.data[0]\r\n                }\r\n                else {\r\n                    storageService._save(`weatherResults_${cityKey}`, res.data);\r\n                    return res.data;\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('Service got Error:', err);\r\n            })\r\n    } catch (err) {\r\n        console.log('err in queryWeather functin:', err)\r\n    }\r\n}\r\nasync function query5Days(cityKey = '215854') {\r\n    try {\r\n        var forecastArr = []\r\n        const forecasts = await storageService.query(`5DaysResults_${cityKey}`);\r\n        if (Object.keys(forecasts).includes('DailyForecasts')) {\r\n            // console.log('query5Days from storage!');\r\n            forecastArr = forecasts.DailyForecasts.map((day) => {\r\n                return {\r\n                    dayTimestamp: day.EpochDate,\r\n                    temperature: day.Temperature\r\n                }\r\n            })\r\n            return Promise.resolve(forecastArr);\r\n        }\r\n        // console.log('api query5Days...');\r\n        return axios.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=${KEY}&details=true`)\r\n            .then(res => {\r\n                storageService._save(`5DaysResults_${cityKey}`, res.data);\r\n                return res.data.DailyForecasts.map((day) => {\r\n                    return {\r\n                        dayTimestamp: day.EpochDate,\r\n                        temperature: day.Temperature\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log('Service got Error:', err);\r\n            })\r\n    } catch (err) {\r\n        console.log('err in query5Days functin:', err)\r\n    }\r\n}\r\nasync function getCityByGeoloc(lat, lon) {\r\n    try {\r\n        // console.log('api getCityByGeoloc...');\r\n        return axios.get(`http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${KEY}&q=${lat}%2C${lon}&toplevel=false`)\r\n            .then(res => {\r\n                return res.data.AdministrativeArea.LocalizedName\r\n            })\r\n            .catch(err => {\r\n                console.log('Service got Error:', err);\r\n            })\r\n    } catch (err) {\r\n        console.log('err in query5Days functin:', err)\r\n    }\r\n}\r\nasync function loadFavorites() {\r\n    try {\r\n        return await storageService.query(`Favorites`);\r\n    } catch (err) {\r\n        console.log('err in addToFavorites functin:', err)\r\n    }\r\n}\r\nasync function addToFavorites(city) {\r\n    try {\r\n        const favorites = await storageService.query(`Favorites`);\r\n        favorites.push(city)\r\n        storageService._save(`Favorites`, favorites);\r\n        return favorites\r\n    } catch (err) {\r\n        console.log('err in addToFavorites functin:', err)\r\n    }\r\n}\r\nasync function removeFromFavorites(city) {\r\n    try {\r\n        const favorites = await storageService.query(`Favorites`);\r\n        const idx = favorites.findIndex(currCity => currCity.location.Key === city.location.Key)\r\n        favorites.splice(idx, 1)\r\n        storageService._save(`Favorites`, favorites);\r\n        return favorites\r\n    } catch (err) {\r\n        console.log('err in removeFromFavorites functin:', err)\r\n    }\r\n}","import weatherService from '../../services/weatherService'\r\n\r\nexport function loadLocation(filterBy = 'tel aviv') {\r\n  return async dispatch => {\r\n    const favorites = await weatherService.loadFavorites()\r\n    const location = await weatherService.queryLocation(filterBy)\r\n    if (!location) return filterBy\r\n    const weather = await weatherService.queryWeather(location.Key)\r\n    const forecasts = await weatherService.query5Days(location.Key)\r\n    var action = { type: 'SET_FAVORITES', favorites }\r\n    dispatch(action)\r\n    var action = { type: 'SET_LOCATION', location }\r\n    dispatch(action)\r\n    action = { type: 'SET_WEATHER', weather }\r\n    dispatch(action)\r\n    action = { type: 'SET_FORECASTS', forecasts }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function addToFavorites(city) {\r\n  return async dispatch => {\r\n    const favorites = await weatherService.addToFavorites(city)\r\n    var action = { type: 'SET_FAVORITES', favorites }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function removeFromFavorites(city) {\r\n  return async dispatch => {\r\n    const favorites = await weatherService.removeFromFavorites(city)\r\n    var action = { type: 'SET_FAVORITES', favorites }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function changeDarkMode(bool) {\r\n  return async dispatch => {\r\n    var action = { type: 'SET_DARK_MODE', bool }\r\n    dispatch(action)\r\n  }\r\n}","import { useEffect, useState } from 'react'\nimport './DaysList.scss'\n\nexport function DaysList({ day, isFahrenheit, calcToCelsius, isDarkMode }) {\n\n    const [dayInWeek, setDayInWeek] = useState('')\n\n    useEffect(() => {\n        var a = new Date(day.dayTimestamp * 1000)\n        var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        setDayInWeek(days[a.getDay()])\n    }, [])\n\n    return (\n        <li className={isDarkMode ? \"day-container dark\" : \"day-container\"}>\n            <h4 >{dayInWeek}</h4>\n            <div>\n                <h4 style={{ transform: isFahrenheit ? \"translateX(0)\" : \"translateX(-130px)\", maxWidth: isFahrenheit ? \"100%\" : \"0\" }} >{day.temperature.Maximum.Value + \" °F\"}</h4>\n                <h4 style={{ transform: isFahrenheit ? \"translateX(130px)\" : \"translateX(0)\", maxWidth: isFahrenheit ? \"0\" : \"100%\" }} >{calcToCelsius(day) + \" °C\"}</h4>\n            </div>\n        </li >\n    )\n}\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Switch from '@mui/material/Switch';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nconst AntSwitch = styled(Switch)(({ theme }) => ({\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: 'flex',\r\n    '&:active': {\r\n        '& .MuiSwitch-thumb': {\r\n            width: 15,\r\n        },\r\n        '& .MuiSwitch-switchBase.Mui-checked': {\r\n            transform: 'translateX(9px)',\r\n        },\r\n    },\r\n    '& .MuiSwitch-switchBase': {\r\n        padding: 2,\r\n        '&.Mui-checked': {\r\n            transform: 'translateX(12px)',\r\n            color: '#fff',\r\n            '& + .MuiSwitch-track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#1890ff',\r\n            },\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\r\n        width: 12,\r\n        height: 12,\r\n        borderRadius: 6,\r\n        transition: theme.transitions.create(['width'], {\r\n            duration: 200,\r\n        }),\r\n    },\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor:\r\n            theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',\r\n        boxSizing: 'border-box',\r\n    },\r\n}));\r\n\r\nexport default function CustomizedSwitches({ setIsFahrenheit, isFahrenheit }) {\r\n    const handleChange = () => {\r\n        setIsFahrenheit(!isFahrenheit)\r\n    }\r\n    return (\r\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n            <Typography>Celsius</Typography>\r\n            <AntSwitch defaultChecked onChange={handleChange} inputProps={{ 'aria-label': 'ant design' }} />\r\n            <Typography>Fahrenheit</Typography>\r\n        </Stack>\r\n    );\r\n}","import './MainDetails.scss'\nimport weatherService from '../../services/weatherService'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeFromFavorites, addToFavorites, loadLocation } from '../../store/actions/weatherActions'\nimport { DaysList } from '../DaysList/DaysList'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport CustomizedSwitches from '../DegreesSwitch'\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios'\n\n\nexport function MainDetails() {\n    const dispatch = useDispatch()\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const debouncedInput = useDebounce(searchTerm, 1300);\n    const currCity = useSelector(state => state.weatherReducer.currCity)\n    const favorites = useSelector(state => state.weatherReducer.favorites)\n    const isDarkMode = useSelector(state => state.weatherReducer.isDarkMode)\n\n    const [disableSearch, setDisableSearch] = useState(false);\n    const [isFahrenheit, setIsFahrenheit] = useState(true)\n    const [isErrModal, setIsErrModal] = useState(false);\n    const [city, setCity] = useState(currCity);\n    const [liked, setLiked] = useState(false);\n\n    useEffect(() => {\n        setCity(currCity);\n        checkIfLiked()\n    }, [currCity])\n    useEffect(() => {\n        checkIfLiked()\n    }, [])\n    useEffect(async () => {\n        if (debouncedInput) {\n            const err = await dispatch(loadLocation(debouncedInput))\n            if (err) {\n                setIsErrModal(true)\n                setTimeout(() => {\n                    setIsErrModal(false)\n                }, 3000);\n            }\n        } else {\n            setCity(currCity)\n        }\n    }, [debouncedInput]);\n\n    const checkIfLiked = () => {\n        (favorites.some((fav) => fav.location.Key === city.location.Key)) ? setLiked(true) : setLiked(false)\n    }\n\n    const tuggleFavorite = () => {\n        if (favorites.some((fav) => fav.location.Key === city.location.Key)) {\n            setLiked(false)\n            return dispatch(removeFromFavorites(currCity))\n        }\n        setLiked(true)\n        dispatch(addToFavorites(currCity))\n    }\n    const typeLetters = (res) => {\n        let isEnglish = /^[A-Za-z\\s]+$/.test(res.target.value);\n        if (isEnglish || res.target.value === '') {\n            setDisableSearch(false)\n            setSearchTerm(res.target.value)\n        }\n        else {\n            setDisableSearch(true)\n        }\n    }\n\n    const getGeoLoc = () => {\n        navigator.geolocation.getCurrentPosition(success, error);\n    }\n\n    const success = async (pos) => {\n        var crd = pos.coords;\n        const myCity = await weatherService.getCityByGeoloc(crd.latitude, crd.longitude)\n\n        setSearchTerm(myCity)\n    }\n    const error = (err) => {\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n    }\n\n    const fillHeart = (bool) => {\n        return bool ? { color: 'red' } : { color: 'gray' }\n    }\n    const calcToCelsius = (day) => {\n        const res = ((day.temperature.Maximum.Value - 32) * 0.5556).toFixed(1)\n        return res * 1; // removes trailing zeros\n    }\n\n    return (\n        <>\n            <section className={isDarkMode ? 'dark functions-sec ' : 'functions-sec '} style={isDarkMode ? { color: 'white' } : { color: 'blue' }}>\n                <Button variant=\"outlined\" onClick={() => getGeoLoc()} style={isDarkMode ? { color: 'white', border: '1px solid white' } : { color: 'blue' }}>Get My Location!</Button>\n                <Box component=\"form\" style={{ color: 'white !important' }} sx={{ '& > :not(style)': { m: 1, width: '25ch' }, }} noValidate autoComplete=\"off\">\n                    <TextField style={{ marginBottom: '22px' }} id=\"standard-basic\" label=\"Enter City Name Here...\" variant=\"standard\" onChange={(e) => typeLetters(e)} />\n                </Box>\n                {disableSearch && <small>english letters only!</small>}\n                <CustomizedSwitches style={{ backgroundColor: 'red !important', transition: ' 0.3 !impirtant' }} setIsFahrenheit={setIsFahrenheit} isFahrenheit={isFahrenheit} defaultChecked />\n            </section>\n            <div className={isDarkMode ? ' curr-city-view dark ' : ' curr-city-view light'}>\n                <section className={isDarkMode ? 'dark curr-city-top-sec ' : 'light curr-city-top-sec '}>\n                    <section>\n                        <h2>{city.location.LocalizedName}</h2>\n                        <div>\n                            <h4 style={{ transform: isFahrenheit ? \"translateX(0)\" : \"translateX(-100px)\", maxWidth: isFahrenheit ? \"100%\" : \"0\" }} >{city.forecasts[0].temperature.Maximum.Value + \" °F\"}</h4>\n                            <h4 style={{ transform: isFahrenheit ? \"translateX(100px)\" : \"translateX(0)\", marginLeft: '40px', maxWidth: isFahrenheit ? \"0\" : \"100%\" }} >{calcToCelsius(city.forecasts[0]) + \" °C\"}</h4>\n                        </div>\n                    </section>\n                    <div className=\"like-sec\" onClick={() => tuggleFavorite()}><Button variant=\"text\">{liked ? \"remove from favorites\" : \"add to favorites\"}</Button><FontAwesomeIcon icon={faHeart} className=\"heart\" style={fillHeart(liked)} /></div>\n                </section>\n                <h2>{city.weather.WeatherText}</h2>\n                <ul className=\"days-list\">{city.forecasts.map((day, idx) => <DaysList key={idx} isDarkMode={isDarkMode} calcToCelsius={calcToCelsius} isFahrenheit={isFahrenheit} day={day} ></DaysList>)}</ul>\n                {isErrModal && <div className=\"snackbar\">Sorry, We Could'nt Find {searchTerm}</div>}\n            </div>\n        </>\n    )\n\n}\n\n// Hook\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    },\n        [value, delay]);\n    return debouncedValue;\n}","import './HeroloApp.scss'\nimport {MainDetails} from '../../cmps/MainDetails'\n\n\nexport function HeroloApp() {\n    return (\n        <div className=\"herolo-app\">\n            <MainDetails> </MainDetails>\n        </div>\n    )\n}\n","import * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport { styled } from '@mui/system';\r\nimport { useSwitch } from '@mui/core/SwitchUnstyled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeDarkMode } from '../store/actions/weatherActions';\r\nimport { useEffect } from 'react'\r\n\r\n\r\nconst SwitchRoot = styled('span')(`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 62px;\r\n  height: 34px;\r\n  padding-top:7px\r\n\r\n`);\r\n\r\nconst SwitchInput = styled('input')(`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  z-index: 1;\r\n  margin: 0;\r\n  cursor: pointer;\r\n`);\r\n\r\nconst SwitchThumb = styled('span')(\r\n  ({ theme }) => `\r\n  position: absolute;\r\n  display: block;\r\n  background-color: ${theme.palette.mode === 'dark' ? '#003892' : '#001e3c'};\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  top: 1px;\r\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:before {\r\n    display: block;\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    background: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n    '#fff',\r\n  )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>') center center no-repeat;\r\n  }\r\n\r\n  &.focusVisible {\r\n    background-color: #79B;\r\n  }\r\n\r\n  &.checked {\r\n    transform: translateX(31px);\r\n    \r\n    &:before {\r\n      background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n    '#fff',\r\n  )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>');\r\n    }\r\n  }\r\n`,\r\n);\r\n\r\nconst SwitchTrack = styled('span')(\r\n  ({ theme }) => `\r\n  background-color: ${theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be'};\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 50%;\r\n  display: block;\r\n`,\r\n);\r\n\r\nfunction MUISwitch(props) {\r\n  const { getInputProps, checked, disabled, focusVisible } = useSwitch(props);\r\n  const dispatch = useDispatch()\r\n  const stateClasses = {\r\n    checked,\r\n    disabled,\r\n    focusVisible,\r\n  };\r\n  useEffect(() => {\r\n    dispatch(changeDarkMode(checked))\r\n  }, [checked])\r\n\r\n  return (\r\n    <SwitchRoot className={clsx(stateClasses)}>\r\n      <SwitchTrack>\r\n        <SwitchThumb className={clsx(stateClasses)} />\r\n      </SwitchTrack>\r\n      <SwitchInput {...getInputProps()} aria-label=\"Demo switch\" />\r\n    </SwitchRoot>\r\n  );\r\n}\r\nexport default function UseSwitchesCustom() {\r\n  return <MUISwitch defaultChecked />;\r\n}","import { Link } from 'react-router-dom'\nimport './AppHeader.scss'\nimport UseSwitchesCustom from '../DarkModeSwitch'\nimport { useSelector } from 'react-redux'\n\n\nexport function AppHeader() {\n    const isDarkMode = useSelector(state => state.weatherReducer.isDarkMode)\n    return (\n        <div className=\"app-header\" style={isDarkMode ? { color: 'white' } : { color: 'black' }}>\n            <div>\n                <UseSwitchesCustom defaultChecked />\n            </div>\n            <span className=\"herolo-span\">Herolo Weather Task</span>\n            <nav className=\"app-header-con\">\n                <Link to={`/`}>HOME </Link>\n                 <span>|</span>\n                <Link to={`/favorites`}> FAVORITES</Link>\n            </nav>\n        </div>\n    )\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { loadLocation } from '../../store/actions/weatherActions'\nimport './FavoritesList.scss'\n\nexport function FavoritesList() {\n    const dispatch = useDispatch()\n    const favorites = useSelector(state => state.weatherReducer.favorites)\n    const isDarkMode = useSelector(state => state.weatherReducer.isDarkMode)\n\n    return (\n        <ul className=\"favorites-list\" style={isDarkMode ? { color: 'white' } : { color: 'black' }}>\n            {favorites.map((city) => <li key={city.location.Key} className={isDarkMode ? \"dark\" : \"bright\"}><Link onClick={() => dispatch(loadLocation(city.location.LocalizedName))} to={`/`}>\n                <h3>{city.location.LocalizedName}</h3>\n                <h3>{city.weather.WeatherText}</h3>\n                <h3>{city.forecasts[0].temperature.Maximum.Value} °F</h3>\n            </Link>\n            </li>\n            )}\n            {!favorites.length && <span>You Have No Favorite Cities Yet</span>}\n        </ul>\n    )\n}\n","\nimport './App.scss';\nimport { HeroloApp } from './pages/HeroloApp'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { loadLocation } from './store/actions/weatherActions';\nimport { AppHeader } from './cmps/AppHeader/AppHeader';\nimport { FavoritesList } from './pages/FavoritesList/FavoritesList';\n\nfunction App() {\n  const dispatch = useDispatch()\n  const currCity = useSelector(state => state.weatherReducer.currCity)\n  const isDarkMode = useSelector(state => state.weatherReducer.isDarkMode)\n\n  useEffect(() => {\n    dispatch(loadLocation())\n  }, [])\n\n  if (!currCity.location.Key || !currCity.weather.WeatherText || !currCity.forecasts.length) return <div>loadiv</div>\n\n  return (\n    <Router>\n      <div className=\"App container\" style={isDarkMode ? { backgroundImage: ' linear-gradient(rgb(101, 183, 198), rgb(3 45 60) 80%)' } : { backgroundImage: ' linear-gradient(rgb(246, 254, 255), rgb(0 189 255) 80%)' }}>\n        <AppHeader></AppHeader>\n        <Switch>\n          <Route component={FavoritesList} path='/favorites' />\n          <Route component={HeroloApp} path='/' />\n        </Switch>\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n\n","\r\nconst INITIAL_STATE = {\r\n  favorites: [],\r\n  isDarkMode: true,\r\n  currCity: {\r\n    location: '',\r\n    weather: '',\r\n    forecasts: []\r\n  },\r\n}\r\n\r\nexport function weatherReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_LOCATION':\r\n      return {\r\n        ...state,\r\n        currCity: {\r\n          ...state.currCity,\r\n          location: action.location\r\n        },\r\n      }\r\n    case 'SET_WEATHER':\r\n      return {\r\n        ...state,\r\n        currCity: {\r\n          ...state.currCity,\r\n          weather: action.weather\r\n        },\r\n      }\r\n    case 'SET_FORECASTS':\r\n      return {\r\n        ...state,\r\n        currCity: {\r\n          ...state.currCity,\r\n          forecasts: action.forecasts\r\n        },\r\n      }\r\n    case 'SET_FAVORITES':\r\n      return {\r\n        ...state,\r\n        favorites: [...action.favorites]\r\n      }\r\n    case 'SET_DARK_MODE':\r\n      return {\r\n        ...state,\r\n        isDarkMode: action.bool\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { weatherReducer } from './reducers/weatherReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst rootReducer = combineReducers({\r\n  weatherReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}